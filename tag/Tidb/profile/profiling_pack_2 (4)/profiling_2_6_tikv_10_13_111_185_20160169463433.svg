<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[var nametype = 'Function:';
var fontsize = 12;
var fontwidth = 0.59;
var xpad = 10;
var inverted = false;
var searchcolor = 'rgb(230,0,230)';
var fluiddrawing = true;]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
            var params = get_params()
            params.x = el.attributes._orig_x.value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["_orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("_orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["_orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["_orig_" + attr].value;
    e.removeAttribute("_orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    for (var x = txt.length - 2; x > 0; x--) {
        if (t.getSubStringLength(0, x + 2) <= w) {
            t.textContent = txt.substring(0, x) + "..";
            return;
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.attributes != undefined) {
        orig_load(e, "x");
        orig_load(e, "width");
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, ratio) {
    if (e.attributes != undefined) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = format_percent((parseFloat(e.attributes.x.value) - x) * ratio);
            if (e.tagName == "text") {
                e.attributes.x.value = format_percent(parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value) + (100 * 3 / frames.attributes.width.value));
            }
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = format_percent(parseFloat(e.attributes.width.value) * ratio);
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, ratio);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            orig_save(e, "x");
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            orig_save(e, "width");
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseFloat(attr.width.value);
    var xmin = parseFloat(attr.x.value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    var ratio = 100 / width;
    // XXX: Workaround for JavaScript float issues (fix me)
    var fudge = 0.001;
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseFloat(a.x.value);
        var ew = parseFloat(a.width.value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew+fudge) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex + fudge >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, ratio);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseFloat(rect.attributes.width.value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseFloat(rect.attributes.x.value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    var fudge = 0.0001;    // JavaScript floating point
    for (var k in keys) {
        var x = parseFloat(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw - fudge) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="422" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="405.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="405.00"> </text><svg id="frames" x="10" width="1180"><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::hedfb620589fffed2/tikv_util::worker::Worker&lt;T&gt;::start_with_timer::{{closure}}::h07183cb43300b2b0/tikv_util::worker::poll::ha9c9c277b45217b4/tikv_util::worker::fill_task_batch::hbba71db9c049eed7/tikv_util::mpsc::Receiver&lt;T&gt;::recv_timeout::h0ace10dd190e767c/crossbeam_channel::channel::Receiver&lt;T&gt;::recv_timeout::h12720aa12de068a7 (1 samples, 5.56%)</title><rect x="0.0000%" y="245" width="5.5556%" height="15" fill="rgb(227,0,7)"/><text x="0.2500%" y="255.50">std::sy..</text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::hed735138097e2d9e/crossbeam_channel::context::Context::with::h5154bd72594b8369/std::thread::local::LocalKey&lt;T&gt;::try_with::hebbf23b23201348f/crossbeam_channel::context::Context::with::{{closure}}::h7d73cb504015f20d (1 samples, 5.56%)</title><rect x="0.0000%" y="229" width="5.5556%" height="15" fill="rgb(217,0,24)"/><text x="0.2500%" y="239.50">crossbe..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}}::h19b934154acf7af7/crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}}::h76e3a416a11ceb5e (1 samples, 5.56%)</title><rect x="0.0000%" y="213" width="5.5556%" height="15" fill="rgb(221,193,54)"/><text x="0.2500%" y="223.50">crossbe..</text></g><g><title>crossbeam_channel::context::Context::wait_until::h8b2048ea7a15043d (1 samples, 5.56%)</title><rect x="0.0000%" y="197" width="5.5556%" height="15" fill="rgb(248,212,6)"/><text x="0.2500%" y="207.50">crossbe..</text></g><g><title>std::thread::park_timeout::h341cac47cf579c0a/std::sync::condvar::Condvar::wait_timeout::hc4275d717c6f06be/std::sys_common::condvar::Condvar::wait_timeout::hae07ae909023fe8a (1 samples, 5.56%)</title><rect x="0.0000%" y="181" width="5.5556%" height="15" fill="rgb(208,68,35)"/><text x="0.2500%" y="191.50">std::th..</text></g><g><title>std::sys::unix::condvar::Condvar::wait_timeout::h7b294607c904192e (1 samples, 5.56%)</title><rect x="0.0000%" y="165" width="5.5556%" height="15" fill="rgb(232,128,0)"/><text x="0.2500%" y="175.50">std::sy..</text></g><g><title>pthread_cond_timedwait@@GLIBC_2.3.2 (1 samples, 5.56%)</title><rect x="0.0000%" y="149" width="5.5556%" height="15" fill="rgb(207,160,47)"/><text x="0.2500%" y="159.50">pthread..</text></g><g><title>cdc (2 samples, 11.11%)</title><rect x="0.0000%" y="357" width="11.1111%" height="15" fill="rgb(228,23,34)"/><text x="0.2500%" y="367.50">cdc</text></g><g><title>Unknown (2 samples, 11.11%)</title><rect x="0.0000%" y="341" width="11.1111%" height="15" fill="rgb(218,30,26)"/><text x="0.2500%" y="351.50">Unknown</text></g><g><title>__clone (2 samples, 11.11%)</title><rect x="0.0000%" y="325" width="11.1111%" height="15" fill="rgb(220,122,19)"/><text x="0.2500%" y="335.50">__clone</text></g><g><title>start_thread (2 samples, 11.11%)</title><rect x="0.0000%" y="309" width="11.1111%" height="15" fill="rgb(250,228,42)"/><text x="0.2500%" y="319.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start::h3f42d1616b825de5/std::sys_common::thread::start_thread::h0647e91c8800cb8c/&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::h8471b989095c2da7 (2 samples, 11.11%)</title><rect x="0.0000%" y="293" width="11.1111%" height="15" fill="rgb(240,193,28)"/><text x="0.2500%" y="303.50">std::sys::unix::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::hbabfae4f70ab9609 (2 samples, 11.11%)</title><rect x="0.0000%" y="277" width="11.1111%" height="15" fill="rgb(216,20,37)"/><text x="0.2500%" y="287.50">&lt;alloc::boxed::B..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}}::h6989e1872239e59c/std::thread::Builder::spawn_unchecked::{{closure}}::ha7c0f24936ffef79/std::panic::catch_unwind::h2f20b893fa0d8eb0/std::panicking::try::hb52c15884465199f/std::panicking::try::do_call::h9cfb92a1f434579b/&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::h07b17a1adf2d724d/std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}::h325a00295d81c5e2 (2 samples, 11.11%)</title><rect x="0.0000%" y="261" width="11.1111%" height="15" fill="rgb(206,188,39)"/><text x="0.2500%" y="271.50">core::ops::funct..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::hedfb620589fffed2/tikv_util::worker::Worker&lt;T&gt;::start_with_timer::{{closure}}::h07183cb43300b2b0/tikv_util::worker::poll::ha9c9c277b45217b4 (1 samples, 5.56%)</title><rect x="5.5556%" y="245" width="5.5556%" height="15" fill="rgb(217,207,13)"/><text x="5.8056%" y="255.50">std::sy..</text></g><g><title>tikv_util::worker::Runnable::run_batch::h39f8907e8ea7d296 (1 samples, 5.56%)</title><rect x="5.5556%" y="229" width="5.5556%" height="15" fill="rgb(231,73,38)"/><text x="5.8056%" y="239.50">tikv_ut..</text></g><g><title>alloc::fmt::format::h65ed4ff619dba1a5/core::fmt::Write::write_fmt::h8de2c41a21a80093 (1 samples, 5.56%)</title><rect x="5.5556%" y="213" width="5.5556%" height="15" fill="rgb(225,20,46)"/><text x="5.8056%" y="223.50">alloc::..</text></g><g><title>core::fmt::write::hc38fdda30204d4dc (1 samples, 5.56%)</title><rect x="5.5556%" y="197" width="5.5556%" height="15" fill="rgb(210,31,41)"/><text x="5.8056%" y="207.50">core::f..</text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str::h161d620c565546bb/&lt;alloc::string::String as core::fmt::Write&gt;::write_str::h6fab6fee6aaed2fa/alloc::string::String::push_str::hafabef56a519f5a6/alloc::vec::Vec&lt;T&gt;::extend_from_slice::hd1f969a04538e73b/&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::SpecExtend&lt;&amp;T,core::slice::Iter&lt;T&gt;&gt;&gt;::spec_extend::hfaacdfe6da99f42f/core::slice::&lt;impl [T]&gt;::copy_from_slice::hbe7d0c63880d1faf/core::intrinsics::copy_nonoverlapping::h65564b4b9e3051c3 (1 samples, 5.56%)</title><rect x="5.5556%" y="181" width="5.5556%" height="15" fill="rgb(221,200,47)"/><text x="5.8056%" y="191.50">&lt;&amp;mut W..</text></g><g><title>future-poller (1 samples, 5.56%)</title><rect x="11.1111%" y="357" width="5.5556%" height="15" fill="rgb(226,26,5)"/><text x="11.3611%" y="367.50">future-..</text></g><g><title>Unknown (1 samples, 5.56%)</title><rect x="11.1111%" y="341" width="5.5556%" height="15" fill="rgb(249,33,26)"/><text x="11.3611%" y="351.50">Unknown</text></g><g><title>__clone (1 samples, 5.56%)</title><rect x="11.1111%" y="325" width="5.5556%" height="15" fill="rgb(235,183,28)"/><text x="11.3611%" y="335.50">__clone</text></g><g><title>start_thread (1 samples, 5.56%)</title><rect x="11.1111%" y="309" width="5.5556%" height="15" fill="rgb(221,5,38)"/><text x="11.3611%" y="319.50">start_t..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start::h3f42d1616b825de5/std::sys_common::thread::start_thread::h0647e91c8800cb8c/&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::h8471b989095c2da7 (1 samples, 5.56%)</title><rect x="11.1111%" y="293" width="5.5556%" height="15" fill="rgb(247,18,42)"/><text x="11.3611%" y="303.50">std::sy..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::hbabfae4f70ab9609 (1 samples, 5.56%)</title><rect x="11.1111%" y="277" width="5.5556%" height="15" fill="rgb(241,131,45)"/><text x="11.3611%" y="287.50">&lt;alloc:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}}::hc5888f1257529261/std::thread::Builder::spawn_unchecked::{{closure}}::h388d5d3e59427585/std::panic::catch_unwind::h568812465744b05d/std::panicking::try::h67d4a77b41da8bfe/std::panicking::try::do_call::ha3c184b8152ade0c/&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::heb8f6d653820c717/std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}::h3b18ee99ef2b7d91 (1 samples, 5.56%)</title><rect x="11.1111%" y="261" width="5.5556%" height="15" fill="rgb(249,31,29)"/><text x="11.3611%" y="271.50">core::o..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::h17f203ef6e8635f8/tokio_threadpool::pool::Pool::spawn_thread::{{closure}}::h2d9c43bf0a9d4e70/tokio_threadpool::worker::Worker::do_run::h14648848330febdd/std::thread::local::LocalKey&lt;T&gt;::with::h406236a3963d0f17/std::thread::local::LocalKey&lt;T&gt;::try_with::hd5732e3778948dbd/tokio_threadpool::worker::Worker::do_run::{{closure}}::h8c62a7e58e4dcad0/tokio_executor::global::with_default::h27bb04a45da11f83/std::thread::local::LocalKey&lt;T&gt;::with::h8837e01f011f715b/std::thread::local::LocalKey&lt;T&gt;::try_with::h3c09342286dba0e9/tokio_executor::global::with_default::{{closure}}::h200f88418d48c01e/tokio_threadpool::worker::Worker::do_run::{{closure}}::{{closure}}::h747469b7fc8fe789 (1 samples, 5.56%)</title><rect x="11.1111%" y="245" width="5.5556%" height="15" fill="rgb(225,111,53)"/><text x="11.3611%" y="255.50">std::sy..</text></g><g><title>tokio_threadpool::worker::Worker::run::h521b8898a30230c1/tokio_threadpool::worker::Worker::try_run_task::hcc80bebc91dcf46f/tokio_threadpool::worker::Worker::try_run_owned_task::hafeae1282988fcd4 (1 samples, 5.56%)</title><rect x="11.1111%" y="229" width="5.5556%" height="15" fill="rgb(238,160,17)"/><text x="11.3611%" y="239.50">tokio_t..</text></g><g><title>tokio_threadpool::worker::Worker::run_task::h53a922c6874186c1/tokio_threadpool::worker::Worker::run_task2::hf1a8aa22987ad6b7/tokio_threadpool::task::Task::run::h74809930135bed07/std::panic::catch_unwind::h516f9c250d8b1628/std::panicking::try::h1ace0013474bc494/std::panicking::try::do_call::hacb06146667ec22b/&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::haaef7f40048e1e74/core::ops::function::FnOnce::call_once::hba38129af4349aaf/tokio_threadpool::task::Task::run::{{closure}}::h8216b7379ef412d8/futures::task_impl::Spawn&lt;T&gt;::poll_future_notify::hfc841ec3625e01d1/futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify::h66f8b38ddb2542ac/futures::task_impl::Spawn&lt;T&gt;::enter::h45ec864c729dc7e0/futures::task_impl::std::set::h562a34086a690639/futures::task_impl::Spawn&lt;T&gt;::enter::{{closure}}::hf62823867da02a48/futures::task_impl::Spawn&lt;T&gt;::poll_future_notify::{{closure}}::hbbf637f05a29ac80/&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll::hc61bb95229ddbbb3 (1 samples, 5.56%)</title><rect x="11.1111%" y="213" width="5.5556%" height="15" fill="rgb(214,148,48)"/><text x="11.3611%" y="223.50">tokio_t..</text></g><g><title>&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll::h9928117123ec8101/&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll::h21ba169f596d19c3/core::result::Result&lt;T,E&gt;::map::hf29d6a1d44de4abb/raftstore::store::fsm::peer::PeerFsmDelegate&lt;T,C&gt;::schedule_tick::{{closure}}::h998eac482ece2160/batch_system::mailbox::Mailbox&lt;Owner,Scheduler&gt;::force_send::h11b31fc7b84cd6eb/batch_system::mailbox::BasicMailbox&lt;Owner&gt;::force_send::hb6e8c37b81b8822c/tikv_util::mpsc::LooseBoundedSender&lt;T&gt;::force_send::hb68fbf31e9597390 (1 samples, 5.56%)</title><rect x="11.1111%" y="197" width="5.5556%" height="15" fill="rgb(232,36,49)"/><text x="11.3611%" y="207.50">&lt;future..</text></g><g><title>tikv_util::mpsc::Sender&lt;T&gt;::send::he54a8fa5a9051f8d/crossbeam_channel::channel::Sender&lt;T&gt;::send::h0150479445262177/crossbeam_channel::flavors::list::Channel&lt;T&gt;::send::h2c3048400ad4bd95/crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send::h41bd1f477572855a/alloc::boxed::Box&lt;T&gt;::new::hb0db216c351732ef/alloc::alloc::exchange_malloc::h685c0f689a21bf4d/alloc::alloc::alloc::hc68bf0e8cd797bbe (1 samples, 5.56%)</title><rect x="11.1111%" y="181" width="5.5556%" height="15" fill="rgb(209,103,24)"/><text x="11.3611%" y="191.50">tikv_ut..</text></g><g><title>mallocx/imalloc/imalloc_body/imalloc_no_sample/iallocztm/arena_malloc/tcache_alloc_small (1 samples, 5.56%)</title><rect x="11.1111%" y="165" width="5.5556%" height="15" fill="rgb(229,88,8)"/><text x="11.3611%" y="175.50">mallocx..</text></g><g><title>_rjem_je_tcache_alloc_small_hard (1 samples, 5.56%)</title><rect x="11.1111%" y="149" width="5.5556%" height="15" fill="rgb(213,181,19)"/><text x="11.3611%" y="159.50">_rjem_j..</text></g><g><title>_rjem_je_arena_tcache_fill_small (1 samples, 5.56%)</title><rect x="11.1111%" y="133" width="5.5556%" height="15" fill="rgb(254,191,54)"/><text x="11.3611%" y="143.50">_rjem_j..</text></g><g><title>arena_bin_malloc_hard/arena_bin_nonfull_slab_get/arena_bin_slabs_nonfull_tryget (1 samples, 5.56%)</title><rect x="11.1111%" y="117" width="5.5556%" height="15" fill="rgb(241,83,37)"/><text x="11.3611%" y="127.50">arena_b..</text></g><g><title>_rjem_je_extent_heap_remove_first (1 samples, 5.56%)</title><rect x="11.1111%" y="101" width="5.5556%" height="15" fill="rgb(233,36,39)"/><text x="11.3611%" y="111.50">_rjem_j..</text></g><g><title>_Z32grpc_timespec_to_millis_round_up12gpr_timespec (1 samples, 5.56%)</title><rect x="16.6667%" y="197" width="5.5556%" height="15" fill="rgb(226,3,54)"/><text x="16.9167%" y="207.50">_Z32grp..</text></g><g><title>_ZN9grpc_core7ExecCtx5FlushEv/exec_ctx_run (1 samples, 5.56%)</title><rect x="22.2222%" y="181" width="5.5556%" height="15" fill="rgb(245,192,40)"/><text x="22.4722%" y="191.50">_ZN9grp..</text></g><g><title>tcp_handle_read/tcp_continue_read/get_target_read_size (1 samples, 5.56%)</title><rect x="22.2222%" y="165" width="5.5556%" height="15" fill="rgb(238,167,29)"/><text x="22.4722%" y="175.50">tcp_han..</text></g><g><title>_Z24grpc_resource_user_quotaP18grpc_resource_user (1 samples, 5.56%)</title><rect x="22.2222%" y="149" width="5.5556%" height="15" fill="rgb(232,182,51)"/><text x="22.4722%" y="159.50">_Z24grp..</text></g><g><title>grpcio::env::poll_queue::hbf7bc01fe48b94c4/grpcio::cq::CompletionQueue::next::hb961e7a74e749793 (3 samples, 16.67%)</title><rect x="16.6667%" y="245" width="16.6667%" height="15" fill="rgb(231,60,39)"/><text x="16.9167%" y="255.50">grpcio::env::poll_queue::h..</text></g><g><title>grpc_completion_queue_next (3 samples, 16.67%)</title><rect x="16.6667%" y="229" width="16.6667%" height="15" fill="rgb(208,69,12)"/><text x="16.9167%" y="239.50">grpc_completion_queue_next</text></g><g><title>cq_next (3 samples, 16.67%)</title><rect x="16.6667%" y="213" width="16.6667%" height="15" fill="rgb(235,93,37)"/><text x="16.9167%" y="223.50">cq_next</text></g><g><title>pollset_work (2 samples, 11.11%)</title><rect x="22.2222%" y="197" width="11.1111%" height="15" fill="rgb(213,116,39)"/><text x="22.4722%" y="207.50">pollset_work</text></g><g><title>pollable_process_events (1 samples, 5.56%)</title><rect x="27.7778%" y="181" width="5.5556%" height="15" fill="rgb(222,207,29)"/><text x="28.0278%" y="191.50">pollabl..</text></g><g><title>eventfd_consume (1 samples, 5.56%)</title><rect x="27.7778%" y="165" width="5.5556%" height="15" fill="rgb(206,96,30)"/><text x="28.0278%" y="175.50">eventfd..</text></g><g><title>eventfd_read (1 samples, 5.56%)</title><rect x="27.7778%" y="149" width="5.5556%" height="15" fill="rgb(218,138,4)"/><text x="28.0278%" y="159.50">eventfd..</text></g><g><title>__libc_read (1 samples, 5.56%)</title><rect x="27.7778%" y="133" width="5.5556%" height="15" fill="rgb(250,191,14)"/><text x="28.0278%" y="143.50">__libc_..</text></g><g><title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll::he601007bd6fe8a2c/&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll::h06913aa9d401b1c0/&lt;futures::future::or_else::OrElse&lt;A,B,F&gt; as futures::future::Future&gt;::poll::h26f16edada0369ff/futures::future::chain::Chain&lt;A,B,C&gt;::poll::ha14678f81de3b57d/&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll::h80283fb1b50bf473/futures::future::chain::Chain&lt;A,B,C&gt;::poll::h8f8837ec116b2223/&lt;futures::sink::send_all::SendAll&lt;T,U&gt; as futures::future::Future&gt;::poll::h3763d9221cd2977d/&lt;futures::stream::fuse::Fuse&lt;S&gt; as futures::stream::Stream&gt;::poll::h97519a1f0b220065/&lt;futures::stream::map::Map&lt;S,F&gt; as futures::stream::Stream&gt;::poll::h9e8e65ed1060b2fa (1 samples, 5.56%)</title><rect x="33.3333%" y="213" width="5.5556%" height="15" fill="rgb(239,60,40)"/><text x="33.5833%" y="223.50">&lt;future..</text></g><g><title>&lt;tikv::server::raft_client::Reusable&lt;T&gt; as futures::stream::Stream&gt;::poll::h99620ef869e1947d/&lt;tikv_util::mpsc::batch::BatchReceiver&lt;T,E,I,C&gt; as futures::stream::Stream&gt;::poll::h322e66e098ae9b98 (1 samples, 5.56%)</title><rect x="33.3333%" y="197" width="5.5556%" height="15" fill="rgb(206,27,48)"/><text x="33.5833%" y="207.50">&lt;tikv::..</text></g><g><title>tikv_util::mpsc::batch::State::yield_poll::h1e5d59c9aa1311c2/alloc::boxed::Box&lt;T&gt;::new::h39e5c62a029d2050/alloc::alloc::exchange_malloc::h685c0f689a21bf4d/alloc::alloc::alloc::hc68bf0e8cd797bbe (1 samples, 5.56%)</title><rect x="33.3333%" y="181" width="5.5556%" height="15" fill="rgb(225,35,8)"/><text x="33.5833%" y="191.50">tikv_ut..</text></g><g><title>mallocx/imalloc/imalloc_body/imalloc_no_sample/iallocztm/arena_malloc/tcache_alloc_small/cache_bin_alloc_easy (1 samples, 5.56%)</title><rect x="33.3333%" y="165" width="5.5556%" height="15" fill="rgb(250,213,24)"/><text x="33.5833%" y="175.50">mallocx..</text></g><g><title>grpc-server (5 samples, 27.78%)</title><rect x="16.6667%" y="357" width="27.7778%" height="15" fill="rgb(247,123,22)"/><text x="16.9167%" y="367.50">grpc-server</text></g><g><title>Unknown (5 samples, 27.78%)</title><rect x="16.6667%" y="341" width="27.7778%" height="15" fill="rgb(231,138,38)"/><text x="16.9167%" y="351.50">Unknown</text></g><g><title>__clone (5 samples, 27.78%)</title><rect x="16.6667%" y="325" width="27.7778%" height="15" fill="rgb(231,145,46)"/><text x="16.9167%" y="335.50">__clone</text></g><g><title>start_thread (5 samples, 27.78%)</title><rect x="16.6667%" y="309" width="27.7778%" height="15" fill="rgb(251,118,11)"/><text x="16.9167%" y="319.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start::h3f42d1616b825de5/std::sys_common::thread::start_thread::h0647e91c8800cb8c/&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::h8471b989095c2da7 (5 samples, 27.78%)</title><rect x="16.6667%" y="293" width="27.7778%" height="15" fill="rgb(217,147,25)"/><text x="16.9167%" y="303.50">std::sys::unix::thread::Thread::new::thread_s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::hbabfae4f70ab9609 (5 samples, 27.78%)</title><rect x="16.6667%" y="277" width="27.7778%" height="15" fill="rgb(247,81,37)"/><text x="16.9167%" y="287.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}}::h388683e83ddad7a9/std::thread::Builder::spawn_unchecked::{{closure}}::h5d2e8730ebcfd3fe/std::panic::catch_unwind::hd5b0ef73d9d0f4ed/std::panicking::try::h0ac3fe62196b743b/std::panicking::try::do_call::h58f5c65f052c58d8/&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::hfac60088fa6c6908/std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}::hdf2f463cbb9543f8 (5 samples, 27.78%)</title><rect x="16.6667%" y="261" width="27.7778%" height="15" fill="rgb(209,12,38)"/><text x="16.9167%" y="271.50">core::ops::function::FnOnce::call_once{{vtabl..</text></g><g><title>grpcio::env::poll_queue::hbf7bc01fe48b94c4/grpcio::task::CallTag::resolve::hdbefb7b6344c06f4/grpcio::task::executor::resolve::h3a80dcb74e0af6b5 (2 samples, 11.11%)</title><rect x="33.3333%" y="245" width="11.1111%" height="15" fill="rgb(227,1,9)"/><text x="33.5833%" y="255.50">grpcio::env::pol..</text></g><g><title>grpcio::task::executor::poll::hb0cc437d1ba86261/futures::task_impl::Spawn&lt;T&gt;::poll_future_notify::h999e828a3522831a/futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify::ha808a971b7178637/futures::task_impl::Spawn&lt;T&gt;::enter::h0eedf1d8bbdf6714/futures::task_impl::std::set::hc65596e360c5c273/futures::task_impl::Spawn&lt;T&gt;::enter::{{closure}}::he82217b8607d7407/futures::task_impl::Spawn&lt;T&gt;::poll_future_notify::{{closure}}::ha8306b822c7df875/&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll::hedaa9d3d604a1c12 (2 samples, 11.11%)</title><rect x="33.3333%" y="229" width="11.1111%" height="15" fill="rgb(248,47,43)"/><text x="33.5833%" y="239.50">grpcio::task::ex..</text></g><g><title>&lt;futures::future::map::Map&lt;A,F&gt; as futures::future::Future&gt;::poll::he601007bd6fe8a2c/&lt;futures::future::map_err::MapErr&lt;A,F&gt; as futures::future::Future&gt;::poll::h06913aa9d401b1c0/&lt;futures::future::or_else::OrElse&lt;A,B,F&gt; as futures::future::Future&gt;::poll::h26f16edada0369ff/futures::future::chain::Chain&lt;A,B,C&gt;::poll::ha14678f81de3b57d/&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll::h80283fb1b50bf473/futures::future::chain::Chain&lt;A,B,C&gt;::poll::h8f8837ec116b2223/&lt;futures::sink::send_all::SendAll&lt;T,U&gt; as futures::future::Future&gt;::poll::h3763d9221cd2977d (1 samples, 5.56%)</title><rect x="38.8889%" y="213" width="5.5556%" height="15" fill="rgb(221,10,30)"/><text x="39.1389%" y="223.50">&lt;future..</text></g><g><title>futures::sink::send_all::SendAll&lt;T,U&gt;::try_start_send::h3018d2b471ade19d/&lt;grpcio::call::client::StreamingCallSink&lt;Req&gt; as futures::sink::Sink&gt;::start_send::hc74e1fc277eadc97/grpcio::call::SinkBase::start_send::h92bf29112ce9a857/&lt;alloc::sync::Arc&lt;grpcio::task::lock::SpinLock&lt;grpcio::call::ShareCall&gt;&gt; as grpcio::call::ShareCallHolder&gt;::call::h6f34dfa3311c6e9a/grpcio::call::SinkBase::start_send::{{closure}}::hca673bbb3f174e3a (1 samples, 5.56%)</title><rect x="38.8889%" y="197" width="5.5556%" height="15" fill="rgb(210,229,1)"/><text x="39.1389%" y="207.50">futures..</text></g><g><title>grpcio::call::Call::start_send_message::h5cfe1e77537458c0/grpcio::call::check_run::h445beb8b8584f324/grpcio::call::Call::start_send_message::{{closure}}::h236b67f3e7670425 (1 samples, 5.56%)</title><rect x="38.8889%" y="181" width="5.5556%" height="15" fill="rgb(222,148,37)"/><text x="39.1389%" y="191.50">grpcio:..</text></g><g><title>grpcwrap_call_send_message (1 samples, 5.56%)</title><rect x="38.8889%" y="165" width="5.5556%" height="15" fill="rgb(234,67,33)"/><text x="39.1389%" y="175.50">grpcwra..</text></g><g><title>grpc_call_start_batch/~ExecCtx (1 samples, 5.56%)</title><rect x="38.8889%" y="149" width="5.5556%" height="15" fill="rgb(247,98,35)"/><text x="39.1389%" y="159.50">grpc_ca..</text></g><g><title>_ZN9grpc_core7ExecCtx5FlushEv (1 samples, 5.56%)</title><rect x="38.8889%" y="133" width="5.5556%" height="15" fill="rgb(247,138,52)"/><text x="39.1389%" y="143.50">_ZN9grp..</text></g><g><title>_Z31grpc_combiner_continue_exec_ctxv (1 samples, 5.56%)</title><rect x="38.8889%" y="117" width="5.5556%" height="15" fill="rgb(213,79,30)"/><text x="39.1389%" y="127.50">_Z31grp..</text></g><g><title>write_action_end_locked (1 samples, 5.56%)</title><rect x="38.8889%" y="101" width="5.5556%" height="15" fill="rgb(246,177,23)"/><text x="39.1389%" y="111.50">write_a..</text></g><g><title>_Z21grpc_chttp2_end_writeP21grpc_chttp2_transportP10grpc_error (1 samples, 5.56%)</title><rect x="38.8889%" y="85" width="5.5556%" height="15" fill="rgb(230,62,27)"/><text x="39.1389%" y="95.50">_Z21grp..</text></g><g><title>_ZN9grpc_core8channelz10SocketNode18RecordMessagesSentEj (1 samples, 5.56%)</title><rect x="38.8889%" y="69" width="5.5556%" height="15" fill="rgb(216,154,8)"/><text x="39.1389%" y="79.50">_ZN9grp..</text></g><g><title>_Z21gpr_get_cycle_counterv (1 samples, 5.56%)</title><rect x="38.8889%" y="53" width="5.5556%" height="15" fill="rgb(244,35,45)"/><text x="39.1389%" y="63.50">_Z21gpr..</text></g><g><title>gpr_now (1 samples, 5.56%)</title><rect x="38.8889%" y="37" width="5.5556%" height="15" fill="rgb(251,115,12)"/><text x="39.1389%" y="47.50">gpr_now</text></g><g><title>pd-worker (1 samples, 5.56%)</title><rect x="44.4444%" y="357" width="5.5556%" height="15" fill="rgb(240,54,50)"/><text x="44.6944%" y="367.50">pd-work..</text></g><g><title>Unknown (1 samples, 5.56%)</title><rect x="44.4444%" y="341" width="5.5556%" height="15" fill="rgb(233,84,52)"/><text x="44.6944%" y="351.50">Unknown</text></g><g><title>__clone (1 samples, 5.56%)</title><rect x="44.4444%" y="325" width="5.5556%" height="15" fill="rgb(207,117,47)"/><text x="44.6944%" y="335.50">__clone</text></g><g><title>start_thread (1 samples, 5.56%)</title><rect x="44.4444%" y="309" width="5.5556%" height="15" fill="rgb(249,43,39)"/><text x="44.6944%" y="319.50">start_t..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start::h3f42d1616b825de5/std::sys_common::thread::start_thread::h0647e91c8800cb8c/&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::h8471b989095c2da7 (1 samples, 5.56%)</title><rect x="44.4444%" y="293" width="5.5556%" height="15" fill="rgb(209,38,44)"/><text x="44.6944%" y="303.50">std::sy..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::hbabfae4f70ab9609 (1 samples, 5.56%)</title><rect x="44.4444%" y="277" width="5.5556%" height="15" fill="rgb(236,212,23)"/><text x="44.6944%" y="287.50">&lt;alloc:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}}::h379c2f90f7628e38/std::thread::Builder::spawn_unchecked::{{closure}}::hca1a4f93b2eda309/std::panic::catch_unwind::h8377f3649f4244a9/std::panicking::try::h68011c55dbcb8455/std::panicking::try::do_call::h24b65171681e9d61/&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::h870d827e2fda77ed/std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}::hd2fdc92d54ff19e6 (1 samples, 5.56%)</title><rect x="44.4444%" y="261" width="5.5556%" height="15" fill="rgb(242,79,21)"/><text x="44.6944%" y="271.50">core::o..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::h3536e43fdf1e0bdd/tikv_util::worker::future::Worker&lt;T&gt;::start::{{closure}}::h5dc3e692a224f910/tikv_util::worker::future::poll::h6f40348c88d32785/tokio_core::reactor::Core::run::h44054e20cabc4372 (1 samples, 5.56%)</title><rect x="44.4444%" y="245" width="5.5556%" height="15" fill="rgb(211,96,35)"/><text x="44.6944%" y="255.50">std::sy..</text></g><g><title>tokio_core::reactor::Core::poll::h68aa10ca3daaa7f4/tokio_reactor::with_default::h41237adb930dda41/std::thread::local::LocalKey&lt;T&gt;::with::hc2e06f68696c6ce0/std::thread::local::LocalKey&lt;T&gt;::try_with::h5558654ace1820c1/tokio_reactor::with_default::{{closure}}::hcb6f1f113cb575bb/tokio_core::reactor::Core::poll::{{closure}}::h6a002c3005cd878e/tokio_executor::global::with_default::he8a24befb58e1c75/std::thread::local::LocalKey&lt;T&gt;::with::hd53cf3e2d3eac861/std::thread::local::LocalKey&lt;T&gt;::try_with::h28548cc9060fe99f/tokio_executor::global::with_default::{{closure}}::hef1a5709a349a00b/tokio_core::reactor::Core::poll::{{closure}}::{{closure}}::hb1baf6d413d21b9e/tokio_timer::timer::handle::with_default::hb6d094af63a8fba8/std::thread::local::LocalKey&lt;T&gt;::with::haf188ea24cdc2b87/std::thread::local::LocalKey&lt;T&gt;::try_with::h8100db405bf282dc/tokio_timer::timer::handle::with_default::{{closure}}::hda473d2092cc321e/tokio_core::reactor::Core::poll::{{closure}}::{{closure}}::{{closure}}::h123dcb151dbaea2f/scoped_tls::ScopedKey&lt;T&gt;::set::h3bd526f94f016d7b/tokio_core::reactor::Core::poll::{{closure}}::{{closure}}::{{closure}}::{{closure}}::h87d6e5a8009d1b20/tokio_current_thread::Entered&lt;P&gt;::turn::hc500e032002c5853 (1 samples, 5.56%)</title><rect x="44.4444%" y="229" width="5.5556%" height="15" fill="rgb(253,215,40)"/><text x="44.6944%" y="239.50">tokio_c..</text></g><g><title>&lt;tokio_timer::timer::Timer&lt;T,N&gt; as tokio_executor::park::Park&gt;::park::hce4d1ac8c1cbc854 (1 samples, 5.56%)</title><rect x="44.4444%" y="213" width="5.5556%" height="15" fill="rgb(211,81,21)"/><text x="44.6944%" y="223.50">&lt;tokio_..</text></g><g><title>tokio_timer::timer::Timer&lt;T,N&gt;::process_queue::hbf5c853202c7c257 (1 samples, 5.56%)</title><rect x="44.4444%" y="197" width="5.5556%" height="15" fill="rgb(208,190,38)"/><text x="44.6944%" y="207.50">tokio_t..</text></g><g><title>batch_system::batch::Poller&lt;N,C,Handler&gt;::poll::he4fae091431ded8f/&lt;raftstore::store::fsm::store::RaftPoller&lt;T,C&gt; as batch_system::batch::PollHandler&lt;raftstore::store::fsm::peer::PeerFsm&lt;engine_rocks::engine::RocksEngine&gt;,raftstore::store::fsm::store::StoreFsm&gt;&gt;::end::h66ad494f1a55c809/raftstore::store::fsm::store::RaftPoller&lt;T,C&gt;::handle_raft_ready::hcbfbf2b41f0f8c3f/raftstore::store::fsm::peer::PeerFsmDelegate&lt;T,C&gt;::post_raft_ready_append::h652ad3995e72bda3/raftstore::store::peer::Peer::post_raft_ready_append::hd323875e08b1f971 (1 samples, 5.56%)</title><rect x="50.0000%" y="229" width="5.5556%" height="15" fill="rgb(235,213,38)"/><text x="50.2500%" y="239.50">batch_s..</text></g><g><title>raftstore::store::peer::Peer::send::hb741f91df8f98699 (1 samples, 5.56%)</title><rect x="50.0000%" y="213" width="5.5556%" height="15" fill="rgb(237,122,38)"/><text x="50.2500%" y="223.50">raftsto..</text></g><g><title>raftstore::store::peer::Peer::send_raft_message::h9d8538ca56f5d038 (1 samples, 5.56%)</title><rect x="50.0000%" y="197" width="5.5556%" height="15" fill="rgb(244,218,35)"/><text x="50.2500%" y="207.50">raftsto..</text></g><g><title>__memcpy_ssse3 (1 samples, 5.56%)</title><rect x="50.0000%" y="181" width="5.5556%" height="15" fill="rgb(240,68,47)"/><text x="50.2500%" y="191.50">__memcp..</text></g><g><title>cq_end_op_for_next/Push (1 samples, 5.56%)</title><rect x="55.5556%" y="133" width="5.5556%" height="15" fill="rgb(210,16,53)"/><text x="55.8056%" y="143.50">cq_end_..</text></g><g><title>_ZN9grpc_core32MultiProducerSingleConsumerQueue4PushEPNS0_4NodeE/_ZN9grpc_core6AtomicIPNS_32MultiProducerSingleConsumerQueue4NodeEE8ExchangeES3_NS_11MemoryOrderE/_ZNSt6atomicIPN9grpc_core32MultiProducerSingleConsumerQueue4NodeEE8exchangeES3_St12memory_order/_ZNSt13__atomic_baseIPN9grpc_core32MultiProducerSingleConsumerQueue4NodeEE8exchangeES3_St12memory_order (1 samples, 5.56%)</title><rect x="55.5556%" y="117" width="5.5556%" height="15" fill="rgb(235,124,12)"/><text x="55.8056%" y="127.50">_ZN9grp..</text></g><g><title>batch_system::batch::Poller&lt;N,C,Handler&gt;::poll::he4fae091431ded8f/batch_system::batch::Poller&lt;N,C,Handler&gt;::fetch_fsm::hefc0a92ee9036664/&lt;raftstore::store::fsm::store::RaftPoller&lt;T,C&gt; as batch_system::batch::PollHandler&lt;raftstore::store::fsm::peer::PeerFsm&lt;engine_rocks::engine::RocksEngine&gt;,raftstore::store::fsm::store::StoreFsm&gt;&gt;::pause::ha1e96614cfa1921f/&lt;tikv::server::transport::ServerTransport&lt;T,S&gt; as raftstore::store::transport::Transport&gt;::flush::h2c00def97ca2ac8e/tikv::server::transport::ServerTransport&lt;T,S&gt;::flush_raft_client::heb944130ba00908a (2 samples, 11.11%)</title><rect x="55.5556%" y="229" width="11.1111%" height="15" fill="rgb(224,169,11)"/><text x="55.8056%" y="239.50">batch_system::ba..</text></g><g><title>tikv::server::raft_client::RaftClient&lt;T&gt;::flush::hc737c948ab150f3d/tikv_util::mpsc::batch::Notifier::notify::h6cbc7a64864aaa5f/core::mem::drop::h52e1abe363a383b1 (2 samples, 11.11%)</title><rect x="55.5556%" y="213" width="11.1111%" height="15" fill="rgb(250,166,2)"/><text x="55.8056%" y="223.50">tikv::server::ra..</text></g><g><title>core::ptr::real_drop_in_place::ha4be69fa89657b67/&lt;tikv_util::mpsc::batch::Notifier as core::ops::drop::Drop&gt;::drop::h15f9d5e05aed6e60/tikv_util::mpsc::batch::State::notify::h95c279c2956075a1 (2 samples, 11.11%)</title><rect x="55.5556%" y="197" width="11.1111%" height="15" fill="rgb(242,216,29)"/><text x="55.8056%" y="207.50">core::ptr::real_..</text></g><g><title>&lt;futures::task_impl::std::ArcWrapped&lt;T&gt; as futures::task_impl::Notify&gt;::notify::hea687f1fc4539062/grpcio::task::executor::&lt;impl futures::task_impl::Notify for grpcio::cq::WorkQueue&gt;::notify::h69141525aedf2a2e/grpcio::task::executor::Kicker::kick::h59acfd3911cadc43 (2 samples, 11.11%)</title><rect x="55.5556%" y="181" width="11.1111%" height="15" fill="rgb(230,116,27)"/><text x="55.8056%" y="191.50">&lt;futures::task_i..</text></g><g><title>grpc_call_start_batch (2 samples, 11.11%)</title><rect x="55.5556%" y="165" width="11.1111%" height="15" fill="rgb(228,99,48)"/><text x="55.8056%" y="175.50">grpc_call_start_..</text></g><g><title>call_start_batch (2 samples, 11.11%)</title><rect x="55.5556%" y="149" width="11.1111%" height="15" fill="rgb(253,11,6)"/><text x="55.8056%" y="159.50">call_start_batch</text></g><g><title>cq_end_op_for_next (1 samples, 5.56%)</title><rect x="61.1111%" y="133" width="5.5556%" height="15" fill="rgb(247,143,39)"/><text x="61.3611%" y="143.50">cq_end_..</text></g><g><title>kick_one_worker (1 samples, 5.56%)</title><rect x="61.1111%" y="117" width="5.5556%" height="15" fill="rgb(236,97,10)"/><text x="61.3611%" y="127.50">kick_on..</text></g><g><title>eventfd_wakeup (1 samples, 5.56%)</title><rect x="61.1111%" y="101" width="5.5556%" height="15" fill="rgb(233,208,19)"/><text x="61.3611%" y="111.50">eventfd..</text></g><g><title>eventfd_write (1 samples, 5.56%)</title><rect x="61.1111%" y="85" width="5.5556%" height="15" fill="rgb(216,164,2)"/><text x="61.3611%" y="95.50">eventfd..</text></g><g><title>__GI_write (1 samples, 5.56%)</title><rect x="61.1111%" y="69" width="5.5556%" height="15" fill="rgb(220,129,5)"/><text x="61.3611%" y="79.50">__GI_wr..</text></g><g><title>batch_system::batch::Poller&lt;N,C,Handler&gt;::poll::he4fae091431ded8f/batch_system::batch::Poller&lt;N,C,Handler&gt;::fetch_fsm::hefc0a92ee9036664/crossbeam_channel::channel::Receiver&lt;T&gt;::recv::h66f9c6415c8ed339/crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::h183a92ad4c063e2b/crossbeam_channel::context::Context::with::h0f788ea6da4f9126/std::thread::local::LocalKey&lt;T&gt;::try_with::h1fcedd36e4e31057/crossbeam_channel::context::Context::with::{{closure}}::h9266290931021718 (1 samples, 5.56%)</title><rect x="66.6667%" y="229" width="5.5556%" height="15" fill="rgb(242,17,10)"/><text x="66.9167%" y="239.50">batch_s..</text></g><g><title>crossbeam_channel::context::Context::with::{{closure}}::h19b934154acf7af7/crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::{{closure}}::h76e3a416a11ceb5e (1 samples, 5.56%)</title><rect x="66.6667%" y="213" width="5.5556%" height="15" fill="rgb(242,107,0)"/><text x="66.9167%" y="223.50">crossbe..</text></g><g><title>crossbeam_channel::context::Context::wait_until::h8b2048ea7a15043d/crossbeam_utils::backoff::Backoff::snooze::he3ddee7dde4c32a7 (1 samples, 5.56%)</title><rect x="66.6667%" y="197" width="5.5556%" height="15" fill="rgb(251,28,31)"/><text x="66.9167%" y="207.50">crossbe..</text></g><g><title>__GI_sched_yield (1 samples, 5.56%)</title><rect x="66.6667%" y="181" width="5.5556%" height="15" fill="rgb(233,223,10)"/><text x="66.9167%" y="191.50">__GI_sc..</text></g><g><title>raftstore (5 samples, 27.78%)</title><rect x="50.0000%" y="357" width="27.7778%" height="15" fill="rgb(215,21,27)"/><text x="50.2500%" y="367.50">raftstore</text></g><g><title>Unknown (5 samples, 27.78%)</title><rect x="50.0000%" y="341" width="27.7778%" height="15" fill="rgb(232,23,21)"/><text x="50.2500%" y="351.50">Unknown</text></g><g><title>__clone (5 samples, 27.78%)</title><rect x="50.0000%" y="325" width="27.7778%" height="15" fill="rgb(244,5,23)"/><text x="50.2500%" y="335.50">__clone</text></g><g><title>start_thread (5 samples, 27.78%)</title><rect x="50.0000%" y="309" width="27.7778%" height="15" fill="rgb(226,81,46)"/><text x="50.2500%" y="319.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start::h3f42d1616b825de5/std::sys_common::thread::start_thread::h0647e91c8800cb8c/&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::h8471b989095c2da7 (5 samples, 27.78%)</title><rect x="50.0000%" y="293" width="27.7778%" height="15" fill="rgb(247,70,30)"/><text x="50.2500%" y="303.50">std::sys::unix::thread::Thread::new::thread_s..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::hbabfae4f70ab9609 (5 samples, 27.78%)</title><rect x="50.0000%" y="277" width="27.7778%" height="15" fill="rgb(212,68,19)"/><text x="50.2500%" y="287.50">&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}}::h44d867114a7b31c2/std::thread::Builder::spawn_unchecked::{{closure}}::ha4f3255ba0349fca/std::panic::catch_unwind::h3260d3fea3d9ce1b/std::panicking::try::h2d7c59bac7a9b8eb/std::panicking::try::do_call::h82e064302da3baa7/&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::h9b690459d5f5a04f/std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}::h7193b409bd619dec (5 samples, 27.78%)</title><rect x="50.0000%" y="261" width="27.7778%" height="15" fill="rgb(240,187,13)"/><text x="50.2500%" y="271.50">core::ops::function::FnOnce::call_once{{vtabl..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::h028dd9bee952397c/batch_system::batch::BatchSystem&lt;N,C&gt;::spawn::{{closure}}::h8831dd45c0474dcd (5 samples, 27.78%)</title><rect x="50.0000%" y="245" width="27.7778%" height="15" fill="rgb(223,113,26)"/><text x="50.2500%" y="255.50">std::sys_common::backtrace::__rust_begin_shor..</text></g><g><title>batch_system::batch::Poller&lt;N,C,Handler&gt;::poll::he4fae091431ded8f/batch_system::batch::Poller&lt;N,C,Handler&gt;::fetch_fsm::hefc0a92ee9036664/crossbeam_channel::channel::Receiver&lt;T&gt;::recv::h66f9c6415c8ed339/crossbeam_channel::flavors::list::Channel&lt;T&gt;::recv::h183a92ad4c063e2b/crossbeam_utils::backoff::Backoff::snooze::he3ddee7dde4c32a7/core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next::h32d7a62e908525a7/&lt;i32 as core::iter::range::Step&gt;::add_usize::h54734f1b5a92e10b/core::num::&lt;impl u32&gt;::wrapping_add::hf13af7aef235cc30 (1 samples, 5.56%)</title><rect x="72.2222%" y="229" width="5.5556%" height="15" fill="rgb(206,192,2)"/><text x="72.4722%" y="239.50">batch_s..</text></g><g><title>stats-monitor (1 samples, 5.56%)</title><rect x="77.7778%" y="357" width="5.5556%" height="15" fill="rgb(241,108,4)"/><text x="78.0278%" y="367.50">stats-m..</text></g><g><title>Unknown (1 samples, 5.56%)</title><rect x="77.7778%" y="341" width="5.5556%" height="15" fill="rgb(247,173,49)"/><text x="78.0278%" y="351.50">Unknown</text></g><g><title>__clone (1 samples, 5.56%)</title><rect x="77.7778%" y="325" width="5.5556%" height="15" fill="rgb(224,114,35)"/><text x="78.0278%" y="335.50">__clone</text></g><g><title>start_thread (1 samples, 5.56%)</title><rect x="77.7778%" y="309" width="5.5556%" height="15" fill="rgb(245,159,27)"/><text x="78.0278%" y="319.50">start_t..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start::h3f42d1616b825de5/std::sys_common::thread::start_thread::h0647e91c8800cb8c/&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::h8471b989095c2da7 (1 samples, 5.56%)</title><rect x="77.7778%" y="293" width="5.5556%" height="15" fill="rgb(245,172,44)"/><text x="78.0278%" y="303.50">std::sy..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::hbabfae4f70ab9609 (1 samples, 5.56%)</title><rect x="77.7778%" y="277" width="5.5556%" height="15" fill="rgb(236,23,11)"/><text x="78.0278%" y="287.50">&lt;alloc:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}}::hefa828f2313ddc8e/std::thread::Builder::spawn_unchecked::{{closure}}::h01c1af728b22c927/std::panic::catch_unwind::ha3ad4eb928175731/std::panicking::try::ha0781d84b936e7f3/std::panicking::try::do_call::h48c286ebc5d4a3ee/&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::h0b88d09b1535565f/std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}::h6df675bcdfafd614 (1 samples, 5.56%)</title><rect x="77.7778%" y="261" width="5.5556%" height="15" fill="rgb(205,117,38)"/><text x="78.0278%" y="271.50">core::o..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::h7705258d9617446c/raftstore::store::worker::pd::StatsMonitor::start::{{closure}}::h3d723209789e1d1b (1 samples, 5.56%)</title><rect x="77.7778%" y="245" width="5.5556%" height="15" fill="rgb(237,72,25)"/><text x="78.0278%" y="255.50">std::sy..</text></g><g><title>tikv_util::metrics::threads_linux::ThreadInfoStatistics::record::h7ae5e911005494f7 (1 samples, 5.56%)</title><rect x="77.7778%" y="229" width="5.5556%" height="15" fill="rgb(244,70,9)"/><text x="78.0278%" y="239.50">tikv_ut..</text></g><g><title>procinfo::pid::io::io_task::hfec85ff5149ceab3/std::fs::File::open::h0d8fe5d6b9c3bae3/std::fs::OpenOptions::open::h1a87a8111053b2fb (1 samples, 5.56%)</title><rect x="77.7778%" y="213" width="5.5556%" height="15" fill="rgb(217,125,39)"/><text x="78.0278%" y="223.50">procinf..</text></g><g><title>std::fs::OpenOptions::_open::h7ebf8bd41b198f73/std::sys::unix::fs::File::open::hdd33b7be7b2bf099 (1 samples, 5.56%)</title><rect x="77.7778%" y="197" width="5.5556%" height="15" fill="rgb(235,36,10)"/><text x="78.0278%" y="207.50">std::fs..</text></g><g><title>std::sys::unix::fs::File::open_c::haa05bf055001977e/std::sys::unix::cvt_r::h5a8f4cd4ba654a1a/std::sys::unix::fs::File::open_c::{{closure}}::heb7b6af25be22523 (1 samples, 5.56%)</title><rect x="77.7778%" y="181" width="5.5556%" height="15" fill="rgb(251,123,47)"/><text x="78.0278%" y="191.50">std::sy..</text></g><g><title>open (1 samples, 5.56%)</title><rect x="77.7778%" y="165" width="5.5556%" height="15" fill="rgb(221,13,13)"/><text x="78.0278%" y="175.50">open</text></g><g><title>procinfo::pid::io::io_task::hfec85ff5149ceab3/procinfo::pid::io::io_file::hd1a68dbcae37524f/procinfo::pid::io::parse_io::h3a7054072e4ec067/core::ptr::real_drop_in_place::h7d9579cb505c1cca (1 samples, 5.56%)</title><rect x="83.3333%" y="53" width="5.5556%" height="15" fill="rgb(238,131,9)"/><text x="83.5833%" y="63.50">procinf..</text></g><g><title>core::ptr::real_drop_in_place::h38160e7bbea71fcb (1 samples, 5.56%)</title><rect x="83.3333%" y="37" width="5.5556%" height="15" fill="rgb(211,50,8)"/><text x="83.5833%" y="47.50">core::p..</text></g><g><title>status-server (2 samples, 11.11%)</title><rect x="83.3333%" y="357" width="11.1111%" height="15" fill="rgb(245,182,24)"/><text x="83.5833%" y="367.50">status-server</text></g><g><title>Unknown (2 samples, 11.11%)</title><rect x="83.3333%" y="341" width="11.1111%" height="15" fill="rgb(242,14,37)"/><text x="83.5833%" y="351.50">Unknown</text></g><g><title>__clone (2 samples, 11.11%)</title><rect x="83.3333%" y="325" width="11.1111%" height="15" fill="rgb(246,228,12)"/><text x="83.5833%" y="335.50">__clone</text></g><g><title>start_thread (2 samples, 11.11%)</title><rect x="83.3333%" y="309" width="11.1111%" height="15" fill="rgb(213,55,15)"/><text x="83.5833%" y="319.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start::h3f42d1616b825de5/std::sys_common::thread::start_thread::h0647e91c8800cb8c/&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::h8471b989095c2da7 (2 samples, 11.11%)</title><rect x="83.3333%" y="293" width="11.1111%" height="15" fill="rgb(209,9,3)"/><text x="83.5833%" y="303.50">std::sys::unix::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::hbabfae4f70ab9609 (2 samples, 11.11%)</title><rect x="83.3333%" y="277" width="11.1111%" height="15" fill="rgb(230,59,30)"/><text x="83.5833%" y="287.50">&lt;alloc::boxed::B..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}}::hc5888f1257529261/std::thread::Builder::spawn_unchecked::{{closure}}::h388d5d3e59427585/std::panic::catch_unwind::h568812465744b05d/std::panicking::try::h67d4a77b41da8bfe/std::panicking::try::do_call::ha3c184b8152ade0c/&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::heb8f6d653820c717/std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}::h3b18ee99ef2b7d91 (2 samples, 11.11%)</title><rect x="83.3333%" y="261" width="11.1111%" height="15" fill="rgb(209,121,21)"/><text x="83.5833%" y="271.50">core::ops::funct..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::h17f203ef6e8635f8/tokio_threadpool::pool::Pool::spawn_thread::{{closure}}::h2d9c43bf0a9d4e70/tokio_threadpool::worker::Worker::do_run::h14648848330febdd/std::thread::local::LocalKey&lt;T&gt;::with::h406236a3963d0f17/std::thread::local::LocalKey&lt;T&gt;::try_with::hd5732e3778948dbd/tokio_threadpool::worker::Worker::do_run::{{closure}}::h8c62a7e58e4dcad0/tokio_executor::global::with_default::h27bb04a45da11f83/std::thread::local::LocalKey&lt;T&gt;::with::h8837e01f011f715b/std::thread::local::LocalKey&lt;T&gt;::try_with::h3c09342286dba0e9/tokio_executor::global::with_default::{{closure}}::h200f88418d48c01e/tokio_threadpool::worker::Worker::do_run::{{closure}}::{{closure}}::h747469b7fc8fe789 (2 samples, 11.11%)</title><rect x="83.3333%" y="245" width="11.1111%" height="15" fill="rgb(220,109,13)"/><text x="83.5833%" y="255.50">std::sys_common:..</text></g><g><title>tokio_threadpool::worker::Worker::run::h521b8898a30230c1/tokio_threadpool::worker::Worker::try_run_task::hcc80bebc91dcf46f/tokio_threadpool::worker::Worker::try_run_owned_task::hafeae1282988fcd4 (2 samples, 11.11%)</title><rect x="83.3333%" y="229" width="11.1111%" height="15" fill="rgb(232,18,1)"/><text x="83.5833%" y="239.50">tokio_threadpool..</text></g><g><title>tokio_threadpool::worker::Worker::run_task::h53a922c6874186c1/tokio_threadpool::worker::Worker::run_task2::hf1a8aa22987ad6b7/tokio_threadpool::task::Task::run::h74809930135bed07/std::panic::catch_unwind::h516f9c250d8b1628/std::panicking::try::h1ace0013474bc494/std::panicking::try::do_call::hacb06146667ec22b/&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::haaef7f40048e1e74/core::ops::function::FnOnce::call_once::hba38129af4349aaf/tokio_threadpool::task::Task::run::{{closure}}::h8216b7379ef412d8/futures::task_impl::Spawn&lt;T&gt;::poll_future_notify::hfc841ec3625e01d1/futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify::h66f8b38ddb2542ac/futures::task_impl::Spawn&lt;T&gt;::enter::h45ec864c729dc7e0/futures::task_impl::std::set::h562a34086a690639/futures::task_impl::Spawn&lt;T&gt;::enter::{{closure}}::hf62823867da02a48/futures::task_impl::Spawn&lt;T&gt;::poll_future_notify::{{closure}}::hbbf637f05a29ac80/&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll::hc61bb95229ddbbb3 (2 samples, 11.11%)</title><rect x="83.3333%" y="213" width="11.1111%" height="15" fill="rgb(215,41,42)"/><text x="83.5833%" y="223.50">tokio_threadpool..</text></g><g><title>&lt;hyper::server::conn::spawn_all::NewSvcTask&lt;I,N,S,E,W&gt; as futures::future::Future&gt;::poll::h29dde50f5383d2ad/&lt;hyper::common::drain::Watching&lt;F,FN&gt; as futures::future::Future&gt;::poll::he7f8e2a66db0bc3a (2 samples, 11.11%)</title><rect x="83.3333%" y="197" width="11.1111%" height="15" fill="rgb(224,123,36)"/><text x="83.5833%" y="207.50">&lt;hyper::server::..</text></g><g><title>&lt;hyper::server::conn::upgrades::UpgradeableConnection&lt;I,S,E&gt; as futures::future::Future&gt;::poll::h9a613a51485d9d10/futures::future::option::&lt;impl futures::future::Future for core::option::Option&lt;F&gt;&gt;::poll::hb0b1e1d38fa10bad (2 samples, 11.11%)</title><rect x="83.3333%" y="181" width="11.1111%" height="15" fill="rgb(240,125,3)"/><text x="83.5833%" y="191.50">&lt;hyper::server::..</text></g><g><title>&lt;futures::future::either::Either&lt;A,B&gt; as futures::future::Future&gt;::poll::h19f821f263adb258/&lt;hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt; as futures::future::Future&gt;::poll::hf263c6fc3ff08258/hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_catch::he2727ed287d53ff0/hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_inner::hb2cbf47d4cf1a67d/hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_loop::h32a1b08662fd38cd (2 samples, 11.11%)</title><rect x="83.3333%" y="165" width="11.1111%" height="15" fill="rgb(205,98,50)"/><text x="83.5833%" y="175.50">&lt;futures::future..</text></g><g><title>hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read::h7b65e1b400774ec9/hyper::proto::h1::dispatch::Dispatcher&lt;D,Bs,I,T&gt;::poll_read_head::h0dc66ab8a24a4c0c (2 samples, 11.11%)</title><rect x="83.3333%" y="149" width="11.1111%" height="15" fill="rgb(205,185,37)"/><text x="83.5833%" y="159.50">hyper::proto::h1..</text></g><g><title>&lt;hyper::proto::h1::dispatch::Server&lt;S&gt; as hyper::proto::h1::dispatch::Dispatch&gt;::recv_msg::ha7b02c2d47f39d70 (2 samples, 11.11%)</title><rect x="83.3333%" y="133" width="11.1111%" height="15" fill="rgb(238,207,15)"/><text x="83.5833%" y="143.50">&lt;hyper::proto::h..</text></g><g><title>&lt;hyper::service::service::ServiceFn&lt;F,ReqBody&gt; as hyper::service::service::Service&gt;::call::h4c5a07e31f848bdd/tikv::server::status_server::StatusServer::start_serve::{{closure}}::{{closure}}::h9629d2f871c9e3a0 (2 samples, 11.11%)</title><rect x="83.3333%" y="117" width="11.1111%" height="15" fill="rgb(213,199,42)"/><text x="83.5833%" y="127.50">&lt;hyper::service:..</text></g><g><title>tikv_util::metrics::dump::hcccf22ab57f1d826 (2 samples, 11.11%)</title><rect x="83.3333%" y="101" width="11.1111%" height="15" fill="rgb(235,201,11)"/><text x="83.5833%" y="111.50">tikv_util::metri..</text></g><g><title>prometheus::registry::gather::hb413b4b006d41225/prometheus::registry::Registry::gather::h8ff8db70b387e907/prometheus::registry::RegistryCore::gather::hfd9a21c6b7f79328 (2 samples, 11.11%)</title><rect x="83.3333%" y="85" width="11.1111%" height="15" fill="rgb(207,46,11)"/><text x="83.5833%" y="95.50">prometheus::regi..</text></g><g><title>&lt;tikv_util::metrics::threads_linux::ThreadsCollector as prometheus::metrics::Collector&gt;::collect::hfb13d3075d2892f7 (2 samples, 11.11%)</title><rect x="83.3333%" y="69" width="11.1111%" height="15" fill="rgb(241,35,35)"/><text x="83.5833%" y="79.50">&lt;tikv_util::metr..</text></g><g><title>prometheus::vec::MetricVec&lt;T&gt;::get_metric_with_label_values::h959e167527dcacd9/prometheus::vec::MetricVecCore&lt;T&gt;::get_metric_with_label_values::h25bfd880e7db0a00/prometheus::vec::MetricVecCore&lt;T&gt;::hash_label_values::h5afe22a92de776df/&lt;fnv::FnvHasher as core::hash::Hasher&gt;::write::h0db0a7e0023a57ff/core::num::&lt;impl u64&gt;::wrapping_mul::h8904e6e36e2e6af9 (1 samples, 5.56%)</title><rect x="88.8889%" y="53" width="5.5556%" height="15" fill="rgb(243,32,47)"/><text x="89.1389%" y="63.50">prometh..</text></g><g><title>all (18 samples, 100%)</title><rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(247,202,23)"/><text x="0.2500%" y="383.50"></text></g><g><title>tso (1 samples, 5.56%)</title><rect x="94.4444%" y="357" width="5.5556%" height="15" fill="rgb(219,102,11)"/><text x="94.6944%" y="367.50">tso</text></g><g><title>Unknown (1 samples, 5.56%)</title><rect x="94.4444%" y="341" width="5.5556%" height="15" fill="rgb(243,110,44)"/><text x="94.6944%" y="351.50">Unknown</text></g><g><title>__clone (1 samples, 5.56%)</title><rect x="94.4444%" y="325" width="5.5556%" height="15" fill="rgb(222,74,54)"/><text x="94.6944%" y="335.50">__clone</text></g><g><title>start_thread (1 samples, 5.56%)</title><rect x="94.4444%" y="309" width="5.5556%" height="15" fill="rgb(216,99,12)"/><text x="94.6944%" y="319.50">start_t..</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start::h3f42d1616b825de5/std::sys_common::thread::start_thread::h0647e91c8800cb8c/&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::h8471b989095c2da7 (1 samples, 5.56%)</title><rect x="94.4444%" y="293" width="5.5556%" height="15" fill="rgb(226,22,26)"/><text x="94.6944%" y="303.50">std::sy..</text></g><g><title>&lt;alloc::boxed::Box&lt;F&gt; as core::ops::function::FnOnce&lt;A&gt;&gt;::call_once::hbabfae4f70ab9609 (1 samples, 5.56%)</title><rect x="94.4444%" y="277" width="5.5556%" height="15" fill="rgb(217,163,10)"/><text x="94.6944%" y="287.50">&lt;alloc:..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}}::hc5888f1257529261/std::thread::Builder::spawn_unchecked::{{closure}}::h388d5d3e59427585/std::panic::catch_unwind::h568812465744b05d/std::panicking::try::h67d4a77b41da8bfe/std::panicking::try::do_call::ha3c184b8152ade0c/&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::heb8f6d653820c717/std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}::h3b18ee99ef2b7d91 (1 samples, 5.56%)</title><rect x="94.4444%" y="261" width="5.5556%" height="15" fill="rgb(213,25,53)"/><text x="94.6944%" y="271.50">core::o..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace::h17f203ef6e8635f8/tokio_threadpool::pool::Pool::spawn_thread::{{closure}}::h2d9c43bf0a9d4e70/tokio_threadpool::worker::Worker::do_run::h14648848330febdd/std::thread::local::LocalKey&lt;T&gt;::with::h406236a3963d0f17/std::thread::local::LocalKey&lt;T&gt;::try_with::hd5732e3778948dbd/tokio_threadpool::worker::Worker::do_run::{{closure}}::h8c62a7e58e4dcad0/tokio_executor::global::with_default::h27bb04a45da11f83/std::thread::local::LocalKey&lt;T&gt;::with::h8837e01f011f715b/std::thread::local::LocalKey&lt;T&gt;::try_with::h3c09342286dba0e9/tokio_executor::global::with_default::{{closure}}::h200f88418d48c01e/tokio_threadpool::worker::Worker::do_run::{{closure}}::{{closure}}::h747469b7fc8fe789 (1 samples, 5.56%)</title><rect x="94.4444%" y="245" width="5.5556%" height="15" fill="rgb(252,105,26)"/><text x="94.6944%" y="255.50">std::sy..</text></g><g><title>tokio_threadpool::worker::Worker::run::h521b8898a30230c1/tokio_threadpool::worker::Worker::try_run_task::hcc80bebc91dcf46f/tokio_threadpool::worker::Worker::try_run_owned_task::hafeae1282988fcd4 (1 samples, 5.56%)</title><rect x="94.4444%" y="229" width="5.5556%" height="15" fill="rgb(220,39,43)"/><text x="94.6944%" y="239.50">tokio_t..</text></g><g><title>tokio_threadpool::worker::Worker::run_task::h53a922c6874186c1/tokio_threadpool::worker::Worker::run_task2::hf1a8aa22987ad6b7/tokio_threadpool::task::Task::run::h74809930135bed07/std::panic::catch_unwind::h516f9c250d8b1628/std::panicking::try::h1ace0013474bc494/std::panicking::try::do_call::hacb06146667ec22b/&lt;std::panic::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once::haaef7f40048e1e74/core::ops::function::FnOnce::call_once::hba38129af4349aaf/tokio_threadpool::task::Task::run::{{closure}}::h8216b7379ef412d8/futures::task_impl::Spawn&lt;T&gt;::poll_future_notify::hfc841ec3625e01d1/futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify::h66f8b38ddb2542ac/futures::task_impl::Spawn&lt;T&gt;::enter::h45ec864c729dc7e0/futures::task_impl::std::set::h562a34086a690639/futures::task_impl::Spawn&lt;T&gt;::enter::{{closure}}::hf62823867da02a48/futures::task_impl::Spawn&lt;T&gt;::poll_future_notify::{{closure}}::hbbf637f05a29ac80/&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll::hc61bb95229ddbbb3 (1 samples, 5.56%)</title><rect x="94.4444%" y="213" width="5.5556%" height="15" fill="rgb(229,68,48)"/><text x="94.6944%" y="223.50">tokio_t..</text></g><g><title>&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll::hf9d2e63e29a33a0c/futures::future::chain::Chain&lt;A,B,C&gt;::poll::hf67165655f06431c/&lt;futures::future::join::Join&lt;A,B&gt; as futures::future::Future&gt;::poll::h35f4f5e8ebff04ea/futures::future::join::MaybeDone&lt;A&gt;::poll::h5aaace44d8e24dc2/&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll::h3c0b44004bac5c01 (1 samples, 5.56%)</title><rect x="94.4444%" y="197" width="5.5556%" height="15" fill="rgb(252,8,32)"/><text x="94.6944%" y="207.50">&lt;future..</text></g><g><title>&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll::h11450b516150b026/futures::future::chain::Chain&lt;A,B,C&gt;::poll::h10ea14ad7aa70ede/&lt;futures::future::loop_fn::LoopFn&lt;A,F&gt; as futures::future::Future&gt;::poll::h45ec091c0bb297b0/&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll::h5d58b836c19def1e/futures::future::chain::Chain&lt;A,B,C&gt;::poll::h5330cffcb0ab0fdb/&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll::h2f91d769091d749e/futures::future::chain::Chain&lt;A,B,C&gt;::poll::h330640e5a3c941ec/&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll::hbfb369e62b564d87 (1 samples, 5.56%)</title><rect x="94.4444%" y="181" width="5.5556%" height="15" fill="rgb(223,20,43)"/><text x="94.6944%" y="191.50">&lt;future..</text></g><g><title>&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll::hd59afa1a9f2426f5/futures::future::chain::Chain&lt;A,B,C&gt;::poll::h958b007ae5ce7536/&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll::{{closure}}::hd04b00688c71a15a/core::result::Result&lt;T,E&gt;::map::h2aa90b9f1c552b07/&lt;futures::future::and_then::AndThen&lt;A,B,F&gt; as futures::future::Future&gt;::poll::{{closure}}::{{closure}}::h5bb36181a112c2fd/pd_client::util::Request&lt;Req,Resp,F&gt;::send_and_receive::{{closure}}::h7e9f85c4c8b4dea5/&lt;pd_client::client::RpcClient as pd_client::PdClient&gt;::get_tso::{{closure}}::h7cfd5c5e6df1762b/kvproto::protos::pdpb_grpc::PdClient::spawn::hd0af9d1087633793/grpcio::client::Client::spawn::had27be43ccc60155/grpcio::task::executor::Executor::spawn::h7aa9d803266ed29f (1 samples, 5.56%)</title><rect x="94.4444%" y="165" width="5.5556%" height="15" fill="rgb(229,81,49)"/><text x="94.6944%" y="175.50">&lt;future..</text></g><g><title>grpcio::task::executor::poll::hb0cc437d1ba86261/futures::task_impl::Spawn&lt;T&gt;::poll_future_notify::h999e828a3522831a/futures::task_impl::Spawn&lt;T&gt;::poll_fn_notify::ha808a971b7178637/futures::task_impl::Spawn&lt;T&gt;::enter::h0eedf1d8bbdf6714/futures::task_impl::std::set::hc65596e360c5c273/futures::task_impl::Spawn&lt;T&gt;::enter::{{closure}}::he82217b8607d7407/futures::task_impl::Spawn&lt;T&gt;::poll_future_notify::{{closure}}::ha8306b822c7df875/&lt;alloc::boxed::Box&lt;F&gt; as futures::future::Future&gt;::poll::hedaa9d3d604a1c12 (1 samples, 5.56%)</title><rect x="94.4444%" y="149" width="5.5556%" height="15" fill="rgb(236,28,36)"/><text x="94.6944%" y="159.50">grpcio:..</text></g><g><title>&lt;futures::future::then::Then&lt;A,B,F&gt; as futures::future::Future&gt;::poll::h202df0d670df7cfa/futures::future::chain::Chain&lt;A,B,C&gt;::poll::hb5d52a43eb1dd322/&lt;futures::sink::send::Send&lt;S&gt; as futures::future::Future&gt;::poll::h42361d3912fe92aa/&lt;grpcio::call::client::StreamingCallSink&lt;Req&gt; as futures::sink::Sink&gt;::start_send::h889bc04b1d5f95f2/grpcio::call::SinkBase::start_send::h65ac88b408d3e40b (1 samples, 5.56%)</title><rect x="94.4444%" y="133" width="5.5556%" height="15" fill="rgb(249,185,26)"/><text x="94.6944%" y="143.50">&lt;future..</text></g><g><title>grpcio::codec::pb_codec::ser::h4eebac07f515f8d6/protobuf::core::Message::write_to_vec::h140568b0aa7a641e/&lt;&amp;mut alloc::vec::Vec&lt;u8&gt; as protobuf::stream::WithCodedOutputStream&gt;::with_coded_output_stream::h547964b2f88ccf5f/protobuf::core::Message::write_to_vec::{{closure}}::h4b167cc9731f8083/protobuf::core::Message::write_to::h6e84d5a69b809eef/&lt;kvproto::protos::pdpb::TsoRequest as protobuf::core::Message&gt;::compute_size::hafea416738b342e8/&lt;kvproto::protos::pdpb::RequestHeader as protobuf::core::Message&gt;::compute_size::h39a7a936e430193f (1 samples, 5.56%)</title><rect x="94.4444%" y="117" width="5.5556%" height="15" fill="rgb(249,174,33)"/><text x="94.6944%" y="127.50">grpcio:..</text></g><g><title>protobuf::rt::unknown_fields_size::h96387564fb4474d6/&lt;&amp;protobuf::unknown::UnknownFields as core::iter::traits::collect::IntoIterator&gt;::into_iter::h4822025e357e90d3/protobuf::unknown::UnknownFields::iter::hdb1f9b4e4c84e638/core::option::Option&lt;T&gt;::as_ref::hd787e6c7d9434943 (1 samples, 5.56%)</title><rect x="94.4444%" y="101" width="5.5556%" height="15" fill="rgb(233,201,37)"/><text x="94.6944%" y="111.50">protobu..</text></g></svg></svg>