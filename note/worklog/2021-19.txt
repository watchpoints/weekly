
<class 'dict'>

class FileTierPolicy:
    def __init__(self):
        self.priority = 0
        self.mtime = 0
        self.name = ''
        self.gsize = 0
        self.ctime = 0
        self.threasNumber = 0
        self.slowpool = 0
        self.fastpool = 0



2022年7月30日
policy=priority:1,size:1000,pools:pool_1_2;priority:2,ltime:86400,file_name:txt,pools:pool_1_2
; 有多个优先级 ，关系是or 
，有多个策略作，关系是 and

AttributeError: module 'subprocess' has no attribute 'wait'

[root@h12-storage01 ~]# ps -ef |grep python3
root     2101771       1  0 Jul30 ?        00:00:36 python3 ./create_file.py
root     2333831       1  0 Jul30 ?        00:00:02 /usr/bin/python3 /root/src/beelive/beemove.py -c /root/src/beelive/config.ini
root     2363931 2333831  0 08:30 ?        00:00:00 /usr/lib64/mpich/bin/mpirun -n 8 --host 10.141.162.13 10.141.162.45 /usr/bin/python3 /root/src/beelive/mpirun_master_slave.py -c /root/src/beelive/config.ini
root     2363935 2363933 98 08:30 ?        00:12:13 /usr/bin/python3 /root/src/beelive/mpirun_master_slave.py -c /root/src/beelive/config.ini
root     2363936 2363933  0 08:30 ?        00:00:00 [python3] <defunct>
root     2363937 2363933  0 08:30 ?        00:00:00 [python3] <defunct>
root     2363938 2363933  0 08:30 ?        00:00:00 [python3] <defunct>
root     2363951 2333831  0 08:30 ?        00:00:00 /usr/lib64/mpich/bin/mpirun -n 8 --host 10.141.162.13 10.141.162.45 /usr/bin/python3 /root/src/beelive/mpirun_master_slave.py -c /root/src/beelive/config.ini
root     2363954 2363952 98 08:30 ?        00:12:12 /usr/bin/python3 /root/src/beelive/mpirun_master_slave.py -c /root/src/beelive/config.ini
root     2363955 2363952  0 08:30 ?        00:00:00 [python3] <defunct>
root     2363956 2363952  0 08:30 ?        00:00:00 [python3] <defunct>
root     2363957 2363952  0 08:30 ?        00:00:00 [python3] <defunct>



1. 支持单个 组合分级策略
2. 写设计概要


inspuR@123
bdm-create-outtree-index  -n 16 /mnt/beegfs /root/beegfs

bdm-update-outtree-index  -n 16 /mnt/beegfs /root/beegfs

/usr/local/bin/bdm-search  -n 8 -B  4096 -a -d " " -o /mnt/beegfs/bak/query -E 'SELECT path() || (CASE type WHEN "d" THEN "" ELSE "/" || name END)  FROM pentries where  name  like "%txt%"' /root/beegfs
# 固定时间迁移 频率scanCron
policy=ltime:10
time python3 ./create_file.py



sqlite3 .bdm.db


insuPe@123
2021年5月18日

重新安排行程
开始:2021年5月19日15:08:35
结束：
摘要：专注




我不回复就最好的回复。+1

在看一次，以前看的都忘记了并且没有这种重点。

考勤整理 调休
17 ok


星期二：

ab -c 10 -n 1000 https://api-videoconfer.gomeplus.com/CMServer/getConfConfer

Valgrind: A Framework for Heavyweight Dynamic Binary Instrumentation
开始:2021年5月12日15:01:00
结束：
摘要：
This paper describes how it works, and how it differs from other
frameworks.
they analyse programs at run-time at the level of machine code

There are two fundamental ways for a DBI framework to represent
code and allow instrumentation.



Memcheck 是一个内存错误检测器。它帮助你使你的程序，尤其是用C和C++编写的程序更正确。
Cachegrind 是一个缓存和分支预测分析器。它可以帮助你使你的程序运行得更快。
Callgrind 是一个调用图生成缓存分析器。它与 Cachegrind 有一些重叠，但也收集了一些 Cachegrind 没有的信息。
Helgrind 是一种线程错误检测器。它可以帮助你使多线程程序更加正确。
DRD 也是一个线程错误检测器。它类似于 Helgrind，但使用不同的分析技术，因此可能会发现不同的问题。
Massif 是一个堆分析器。它有助于减少程序使用的内存。
DHAT 是另一种堆分析器。它有助于您了解块生命周期、块利用率和布局效率低下的问题。
BBV 是一种实验性的 SimPoint 基本块矢量生成器。它对从事计算机体系结构研究和开发的人们是有用的。

Valgrind uses disassemble-and-resynthesise (D&R): machine
code is converted to an IR in which each instruction becomes
one or more IR operations

Valgrind’s use of D&R is the single feature that most
distinguishes it from other DBI frameworks.

https://www.valgrind.org/docs/manual/ms-manual.html

Shadow memory lets a tool remember something about the history
of every memory location and/or value in memory
https://stackoverflow.com/questions/1656227/how-does-valgrind-work

https://riboseyim.gitbook.io/perf/dtrace_bcc
http://www.brendangregg.com/blog/2015-06-28/linux-ftrace-uprobe.html

二叉树中的最大路径和
开始:2021年5月11日17:46:38
结束：2021年5月11日19:54:02
耗时：

Leetcode#328 OddEvenLinkedList
开始:2021年5月11日19:54:20
结束：2021年5月12日15:00:08
耗时：


最重要第一个事情：复盘


The 8 fallacies of distributed computing
1. The network is reliable 网络是可靠的 --机器不保障提供24h无故障
2、 Latency is zero. 延迟为零 --高延迟
3. The network is secure 网络是安全的
4. Topology doesn't change. 拓扑不会改变
5 There is one administrator 没有中心节点。
6 Transport cost is zero 传输代价为零
7 Bandwidth is infinite 用网络进行视频和音频服务


星期六：
看到一个感觉不好的新闻，你判断是不好的，你行为应该是不打开的，在好奇和无聊也不打开。


10:00
检查

2:00 设计一个红包系统

https://time.geekbang.org/article/188
难点是可扩展：如何分片
https://melonshell.github.io/2020/01/23/tech2_wx_red_packet/
难点是：系统层次，缓存需要缓存吗？


https://github.com/chenxuhua/issues-blog/issues/3


微信红包系统疑问，
疑问1
看网上文档都是采取mysql做存储
金融系统存储，采用redis做存储可以吗？
疑问2：红包数量数量是全局数据，
       mysql拆分多台存储，
	   这个理解不了，怎么汇总起来
集群，一致性
https://maimai.cn/web/gossip_detail?gid=28955689&egid=dcf52a5cafe311eb85aa801844e50190

1 红包是钱，钱怎么拆分呀
2.红包记录:怎么存储
https://maimai.cn/web/gossip_detail?gid=23276709&egid=f13af2fac19811e98a38246e96b48088
## 好的提问
陈咬金的三板斧来
第一斧：为什么这么做，帮助解决了什么问题(Why)，
第二斧：原理是什么，分析技术本质(What)。
第三斧：技术场景是什么，发挥优势(how)


需求描述
1. 秒杀时间 更新大于读取。
2. 一台机器可以吗？单独故障
https://maimai.cn/web/gossip_detail?gid=27160123&egid=b7fa7a18e8d111ea8ac2801844e50190