<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>man on Troy的网络博客</title>
    <link>https://wangcy6.github.io/tags/man/</link>
    <description>Recent content in man on Troy的网络博客</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 07 Sep 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://wangcy6.github.io/tags/man/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>c&#43;&#43;代码编程规范</title>
      <link>https://wangcy6.github.io/post/c&#43;&#43;/02_master_c&#43;&#43;_class/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/c&#43;&#43;/02_master_c&#43;&#43;_class/</guid>
      <description>C++ string 成员函数 length() size() 和 C strlen() 的区别 当 string 中含有空字符’\0’，使用 strlen() 获取 string 的长度时会被截断，使用成员函数 length() 和 size() 可以返回 string 的真实长度。 // 构造时使用 string strTest(buf,</description>
    </item>
    
    <item>
      <title>c&#43;&#43;代码编程规范</title>
      <link>https://wangcy6.github.io/post/c&#43;&#43;/02_master_c&#43;&#43;_share_pointer/</link>
      <pubDate>Sat, 07 Sep 2024 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/c&#43;&#43;/02_master_c&#43;&#43;_share_pointer/</guid>
      <description>成为面试官 第一练 未了节省读者时间一句话解释 shared_ptr 的引用计数本身是安全且无锁的，但对象的读写则不是， 因为 shared_ptr 有两个数据成员，读写操作不能原子 一个 shared_ptr 对</description>
    </item>
    
    <item>
      <title>c&#43;&#43;入门指南</title>
      <link>https://wangcy6.github.io/post/c&#43;&#43;/01_c&#43;&#43;_new/</link>
      <pubDate>Wed, 07 Aug 2024 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/c&#43;&#43;/01_c&#43;&#43;_new/</guid>
      <description>&amp;laquo;&amp;laquo;&amp;laquo;&amp;lt; HEAD # 代码评审（Code Review） ======= 14400 293f2e598d8da34a01eebf8c3ffae13524256be8 架构/设计 a. 单一职责原则 一个类只做一类相关的事情。 一个方法，最好只做一件事情。 b. 代码是否污染 代码</description>
    </item>
    
    <item>
      <title>践行时间管理方法</title>
      <link>https://wangcy6.github.io/post/book/101_thing/</link>
      <pubDate>Thu, 04 May 2023 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/book/101_thing/</guid>
      <description>个人学习使用 强哥思考笔记 1. 关于改变 很多人所谓的“改变”，其实都是在做“无用功”，比如说希望这次能够升职加薪，怎么办呢？要跟老板好好沟通，所以</description>
    </item>
    
    <item>
      <title>2021-读书清单</title>
      <link>https://wangcy6.github.io/post/book/2021_book/</link>
      <pubDate>Sat, 10 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/book/2021_book/</guid>
      <description>2021年 第一本：单核工作法图解：事多到事少,拖延变高效 高 帮助你解决问题：提供行动指南，非理论一本书 百度网盘：https://pan.bai</description>
    </item>
    
    <item>
      <title>man</title>
      <link>https://wangcy6.github.io/post/book/man/</link>
      <pubDate>Mon, 02 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://wangcy6.github.io/post/book/man/</guid>
      <description>帮助文档 内存管理 1 man malloc http://man7.org/linux/man-pages/man3/malloc.3.html Thread safety （多个线程可以同时执行） arena 1 2 3 4 5 To scalably handle memory allocation in multithreaded applications, glibc creates additional memory allocation arenas if mutex contention is detected. Each arena is a large region of memory that is internally allocated by the system (using brk(2) or mmap(2)),</description>
    </item>
    
  </channel>
</rss>
